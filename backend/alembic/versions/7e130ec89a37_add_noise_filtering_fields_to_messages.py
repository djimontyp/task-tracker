"""add noise filtering fields to messages

Revision ID: 7e130ec89a37
Revises: 60f8bcd7d83e
Create Date: 2025-10-17 02:45:43.134730

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7e130ec89a37"
down_revision: Union[str, Sequence[str], None] = "60f8bcd7d83e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("atoms_embedding_idx"),
        table_name="atoms",
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_using="hnsw",
    )
    op.add_column("messages", sa.Column("importance_score", sa.Float(), nullable=True))
    op.add_column(
        "messages", sa.Column("noise_classification", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True)
    )
    op.add_column("messages", sa.Column("noise_factors", postgresql.JSONB(astext_type=sa.Text()), nullable=True))

    op.create_check_constraint(
        "importance_score_range_check",
        "messages",
        "importance_score IS NULL OR (importance_score >= 0.0 AND importance_score <= 1.0)",
    )

    op.create_index("idx_messages_importance_score", "messages", ["importance_score"])
    op.create_index("idx_messages_noise_classification", "messages", ["noise_classification"])

    op.drop_index(
        op.f("messages_embedding_idx"),
        table_name="messages",
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_using="hnsw",
    )
    op.alter_column(
        "task_proposals",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "task_proposals",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.create_index(
        op.f("messages_embedding_idx"),
        "messages",
        ["embedding"],
        unique=False,
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_using="hnsw",
    )

    op.drop_index("idx_messages_noise_classification", table_name="messages")
    op.drop_index("idx_messages_importance_score", table_name="messages")
    op.drop_constraint("importance_score_range_check", "messages", type_="check")

    op.drop_column("messages", "noise_factors")
    op.drop_column("messages", "noise_classification")
    op.drop_column("messages", "importance_score")
    op.create_index(
        op.f("atoms_embedding_idx"),
        "atoms",
        ["embedding"],
        unique=False,
        postgresql_ops={"embedding": "vector_cosine_ops"},
        postgresql_using="hnsw",
    )
    # ### end Alembic commands ###
