"""initial schema with all tables

Revision ID: ba32bb3cb82d
Revises: 
Create Date: 2025-10-04 02:17:53.570095

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba32bb3cb82d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('llm_providers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('ollama', 'openai', name='providertype'), nullable=False),
    sa.Column('base_url', sa.Text(), nullable=True),
    sa.Column('api_key_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('validation_status', sa.Enum('pending', 'validating', 'connected', 'error', name='validationstatus'), nullable=False),
    sa.Column('validation_error', sa.Text(), nullable=True),
    sa.Column('validated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_providers_name'), 'llm_providers', ['name'], unique=True)
    op.create_table('simple_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simple_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('type', sa.Enum('telegram', 'slack', 'email', 'api', name='sourcetype'), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('response_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_configs_name'), 'task_configs', ['name'], unique=True)
    op.create_table('webhook_settings',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('provider_id', sa.Uuid(), nullable=False),
    sa.Column('model_name', sa.Text(), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['llm_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_configs_name'), 'agent_configs', ['name'], unique=True)
    op.create_table('messages',
    sa.Column('external_message_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('classification', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simple_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_message_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('analyzed', sa.Boolean(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['simple_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_task_assignments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('agent_id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_configs.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task_configs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agent_id', 'task_id', name='uq_agent_task')
    )
    op.create_table('tasks',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('bug', 'feature', 'improvement', 'question', 'chore', name='taskcategory'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'critical', name='taskpriority'), nullable=False),
    sa.Column('status', sa.Enum('open', 'in_progress', 'completed', 'closed', name='taskstatus'), nullable=False),
    sa.Column('classification_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_generated', sa.Boolean(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('source_message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.ForeignKeyConstraint(['source_message_id'], ['messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('agent_task_assignments')
    op.drop_table('simple_messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_agent_configs_name'), table_name='agent_configs')
    op.drop_table('agent_configs')
    op.drop_table('webhook_settings')
    op.drop_index(op.f('ix_task_configs_name'), table_name='task_configs')
    op.drop_table('task_configs')
    op.drop_table('sources')
    op.drop_table('simple_tasks')
    op.drop_table('simple_sources')
    op.drop_index(op.f('ix_llm_providers_name'), table_name='llm_providers')
    op.drop_table('llm_providers')
    # ### end Alembic commands ###
