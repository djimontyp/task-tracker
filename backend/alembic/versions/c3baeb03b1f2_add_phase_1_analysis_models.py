"""Add Phase 1 analysis models

Revision ID: c3baeb03b1f2
Revises: 8d7913416c89
Create Date: 2025-10-10 11:06:36.125644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c3baeb03b1f2'
down_revision: Union[str, Sequence[str], None] = '8d7913416c89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_entities',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('glossary', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('components', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('default_assignee_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('pm_user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['pm_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_configs_name'), 'project_configs', ['name'], unique=True)
    op.create_table('analysis_runs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('time_window_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('time_window_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('agent_assignment_id', sa.Uuid(), nullable=False),
    sa.Column('project_config_id', sa.Uuid(), nullable=True),
    sa.Column('config_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('trigger_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('triggered_by_user_id', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('proposals_total', sa.Integer(), nullable=False),
    sa.Column('proposals_approved', sa.Integer(), nullable=False),
    sa.Column('proposals_rejected', sa.Integer(), nullable=False),
    sa.Column('proposals_pending', sa.Integer(), nullable=False),
    sa.Column('total_messages_in_window', sa.Integer(), nullable=False),
    sa.Column('messages_after_prefilter', sa.Integer(), nullable=False),
    sa.Column('batches_created', sa.Integer(), nullable=False),
    sa.Column('llm_tokens_used', sa.Integer(), nullable=False),
    sa.Column('cost_estimate', sa.Float(), nullable=False),
    sa.Column('error_log', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('accuracy_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['agent_assignment_id'], ['agent_task_assignments.id'], ),
    sa.ForeignKeyConstraint(['project_config_id'], ['project_configs.id'], ),
    sa.ForeignKeyConstraint(['triggered_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_proposals',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('analysis_run_id', sa.Uuid(), nullable=False),
    sa.Column('proposed_title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('proposed_description', sa.Text(), nullable=False),
    sa.Column('proposed_priority', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('proposed_category', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('proposed_project_id', sa.Uuid(), nullable=True),
    sa.Column('proposed_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('proposed_parent_id', sa.Uuid(), nullable=True),
    sa.Column('source_message_ids', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('time_span_seconds', sa.Integer(), nullable=False),
    sa.Column('proposed_sub_tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('similar_task_id', sa.Uuid(), nullable=True),
    sa.Column('similarity_score', sa.Float(), nullable=True),
    sa.Column('similarity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('diff_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('llm_recommendation', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('reasoning', sa.Text(), nullable=False),
    sa.Column('project_classification_confidence', sa.Float(), nullable=True),
    sa.Column('project_keywords_matched', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('reviewed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('review_action', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['analysis_run_id'], ['analysis_runs.id'], ),
    sa.ForeignKeyConstraint(['proposed_parent_id'], ['task_entities.id'], ),
    sa.ForeignKeyConstraint(['proposed_project_id'], ['project_configs.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['similar_task_id'], ['task_entities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('messages', sa.Column('analysis_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('messages', sa.Column('included_in_runs', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('messages', 'included_in_runs')
    op.drop_column('messages', 'analysis_status')
    op.drop_table('task_proposals')
    op.drop_table('analysis_runs')
    op.drop_index(op.f('ix_project_configs_name'), table_name='project_configs')
    op.drop_table('project_configs')
    op.drop_table('task_entities')
    # ### end Alembic commands ###
