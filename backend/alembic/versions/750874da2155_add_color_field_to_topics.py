"""add color field to topics

Revision ID: 750874da2155
Revises: 4501805fe608
Create Date: 2025-10-12 17:16:35.059877

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "750874da2155"
down_revision: Union[str, Sequence[str], None] = "4501805fe608"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("topics", sa.Column("color", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True))
    # ### end Alembic commands ###

    # Data migration: assign colors to existing topics based on their icons
    icon_colors = {
        "BriefcaseIcon": "blue",
        "ShoppingCartIcon": "emerald",
        "LightBulbIcon": "amber",
        "AcademicCapIcon": "purple",
        "HeartIcon": "rose",
        "CurrencyDollarIcon": "green",
        "HomeIcon": "cyan",
        "GlobeAltIcon": "sky",
        "CodeBracketIcon": "violet",
        "CalendarIcon": "orange",
        "BookOpenIcon": "indigo",
        "MusicalNoteIcon": "pink",
        "CheckCircleIcon": "teal",
        "FlagIcon": "red",
        "FolderIcon": "slate",
        "UserIcon": "fuchsia",
    }

    connection = op.get_bind()
    for icon, color in icon_colors.items():
        connection.execute(
            sa.text("UPDATE topics SET color = :color WHERE icon = :icon"), {"color": color, "icon": icon}
        )

    # Set default color for any topics without an icon or unrecognized icon
    connection.execute(sa.text("UPDATE topics SET color = 'slate' WHERE color IS NULL"))


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("topics", "color")
    # ### end Alembic commands ###
