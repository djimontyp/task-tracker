services:
  postgres:
    image: postgres:15
    container_name: task-tracker-postgres
    env_file:
      - .env
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  nats:
    image: nats:latest
    container_name: task-tracker-nats
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: ["--jetstream"]
    volumes:
      - nats_data:/data
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: task-tracker-worker
    command: ["python", "-m", "taskiq", "worker", "core.taskiq_config:nats_broker", "core.worker"]
    depends_on:
      - nats
    restart: unless-stopped
    env_file:
      - .env
    develop:
      watch:
        - action: sync+restart
          path: ./backend/app
          target: /app/app
          ignore:
            - "**/__pycache__"
            - "**/*.pyc"
        - action: sync+restart
          path: ./backend/core
          target: /app/core
          ignore:
            - "**/__pycache__"
            - "**/*.pyc"
        - action: rebuild
          path: ./pyproject.toml

  api:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: task-tracker-api
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    env_file:
      - .env
    develop:
      watch:
        - action: sync+restart
          path: ./backend/app
          target: /app/app
          ignore:
            - "**/__pycache__"
            - "**/*.pyc"
        - action: sync+restart
          path: ./backend/core
          target: /app/core
          ignore:
            - "**/__pycache__"
            - "**/*.pyc"

  dashboard:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: task-tracker-dashboard
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped
    environment:
      - REACT_APP_API_BASE_URL=${DASHBOARD_API_BASE_URL:-http://localhost:8000}
      - REACT_APP_WS_URL=${DASHBOARD_WS_URL:-ws://localhost/ws}
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: sync
          path: ./frontend/public
          target: /app/public
        - action: rebuild
          path: ./frontend/package.json

  nginx:
    image: nginx:alpine
    container_name: task-tracker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - dashboard
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    name: task-tracker-postgres-data
  nats_data:
    name: task-tracker-nats-data
